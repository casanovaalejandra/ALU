#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x1d92690 .scope module, "divTest" "divTest" 2 86;
 .timescale 0 0;
v0x1de4990_0 .var "A", 31 0;
v0x1de4a30_0 .var "B", 31 0;
v0x1de4ae0_0 .net "C", 0 0, v0x1de4140_0; 1 drivers
v0x1de4b90_0 .net "N", 0 0, v0x1de41e0_0; 1 drivers
v0x1de4c70_0 .net "V", 0 0, v0x1de4290_0; 1 drivers
v0x1de4d20_0 .net "Z", 0 0, v0x1de4330_0; 1 drivers
v0x1de4da0_0 .net "quotient", 31 0, v0x1de4740_0; 1 drivers
v0x1de4e50_0 .net "residue", 31 0, v0x1de47e0_0; 1 drivers
v0x1de4f00_0 .var "sign", 0 0;
S_0x1d92780 .scope module, "div1" "div" 2 91, 2 1, S_0x1d92690;
 .timescale 0 0;
v0x1d92870_0 .net "A", 31 0, v0x1de4990_0; 1 drivers
v0x1de40a0_0 .net "B", 31 0, v0x1de4a30_0; 1 drivers
v0x1de4140_0 .var "C", 0 0;
v0x1de41e0_0 .var "N", 0 0;
v0x1de4290_0 .var "V", 0 0;
v0x1de4330_0 .var "Z", 0 0;
v0x1de4410_0 .var "counter", 31 0;
v0x1de44b0_0 .var "dividend", 31 0;
v0x1de45a0_0 .var "divisor", 31 0;
v0x1de4640_0 .var "numToSubstract", 31 0;
v0x1de4740_0 .var "quotient", 31 0;
v0x1de47e0_0 .var "residue", 31 0;
v0x1de48f0_0 .net "sign", 0 0, v0x1de4f00_0; 1 drivers
E_0x1dba390 .event edge, v0x1de48f0_0, v0x1de40a0_0, v0x1d92870_0;
    .scope S_0x1d92780;
T_0 ;
    %wait E_0x1dba390;
    %set/v v0x1de4410_0, 0, 32;
    %load/v 8, v0x1de40a0_0, 32;
    %set/v v0x1de45a0_0, 8, 32;
    %load/v 8, v0x1d92870_0, 32;
    %set/v v0x1de44b0_0, 8, 32;
    %set/v v0x1de41e0_0, 0, 1;
    %set/v v0x1de4140_0, 0, 1;
    %set/v v0x1de4290_0, 0, 1;
    %set/v v0x1de4330_0, 0, 1;
    %load/v 8, v0x1de45a0_0, 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_0.0, 4;
    %vpi_call 2 37 "$display", "cant perform operation.\012";
T_0.0 ;
    %load/v 8, v0x1de45a0_0, 32;
    %cmpi/u 8, 1, 32;
    %jmp/0xz  T_0.2, 6;
    %load/v 8, v0x1de44b0_0, 32;
    %set/v v0x1de4740_0, 8, 32;
    %set/v v0x1de47e0_0, 0, 32;
T_0.2 ;
    %load/v 8, v0x1de48f0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.4, 4;
    %load/x1p 12, v0x1de45a0_0, 1;
    %jmp T_0.5;
T_0.4 ;
    %mov 12, 2, 1;
T_0.5 ;
    %mov 9, 12, 1; Move signal select into place
    %mov 10, 0, 2;
    %cmpi/u 9, 1, 3;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.6, 4;
    %load/x1p 12, v0x1de44b0_0, 1;
    %jmp T_0.7;
T_0.6 ;
    %mov 12, 2, 1;
T_0.7 ;
    %mov 9, 12, 1; Move signal select into place
    %mov 10, 0, 2;
    %cmpi/u 9, 1, 3;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.8, 8;
    %load/v 8, v0x1de45a0_0, 32;
    %inv 8, 32;
    %addi 8, 1, 32;
    %set/v v0x1de45a0_0, 8, 32;
    %vpi_call 2 47 "$display", "\012divisor now possitive", v0x1de45a0_0;
    %load/v 8, v0x1de44b0_0, 32;
    %inv 8, 32;
    %addi 8, 1, 32;
    %set/v v0x1de44b0_0, 8, 32;
    %vpi_call 2 49 "$display", "\012 dividend now positive", v0x1de44b0_0;
    %set/v v0x1de41e0_0, 0, 1;
T_0.8 ;
    %load/v 8, v0x1de48f0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.10, 4;
    %load/x1p 11, v0x1de45a0_0, 1;
    %jmp T_0.11;
T_0.10 ;
    %mov 11, 2, 1;
T_0.11 ;
    %mov 9, 11, 1; Move signal select into place
    %mov 10, 0, 1;
    %cmpi/u 9, 0, 2;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.12, 4;
    %load/x1p 12, v0x1de44b0_0, 1;
    %jmp T_0.13;
T_0.12 ;
    %mov 12, 2, 1;
T_0.13 ;
    %mov 9, 12, 1; Move signal select into place
    %mov 10, 0, 2;
    %cmpi/u 9, 1, 3;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.14, 8;
    %set/v v0x1de41e0_0, 1, 1;
    %load/v 8, v0x1de44b0_0, 32;
    %inv 8, 32;
    %addi 8, 1, 32;
    %set/v v0x1de44b0_0, 8, 32;
T_0.14 ;
    %load/v 8, v0x1de48f0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.16, 4;
    %load/x1p 12, v0x1de45a0_0, 1;
    %jmp T_0.17;
T_0.16 ;
    %mov 12, 2, 1;
T_0.17 ;
    %mov 9, 12, 1; Move signal select into place
    %mov 10, 0, 2;
    %cmpi/u 9, 1, 3;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.18, 4;
    %load/x1p 11, v0x1de44b0_0, 1;
    %jmp T_0.19;
T_0.18 ;
    %mov 11, 2, 1;
T_0.19 ;
    %mov 9, 11, 1; Move signal select into place
    %mov 10, 0, 1;
    %cmpi/u 9, 0, 2;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.20, 8;
    %set/v v0x1de41e0_0, 1, 1;
    %load/v 8, v0x1de45a0_0, 32;
    %inv 8, 32;
    %addi 8, 1, 32;
    %set/v v0x1de45a0_0, 8, 32;
    %vpi_call 2 62 "$display", "\012 dividend now positive", v0x1de44b0_0;
T_0.20 ;
    %load/v 8, v0x1de45a0_0, 32;
    %set/v v0x1de4640_0, 8, 32;
T_0.22 ;
    %load/v 8, v0x1de4640_0, 32;
    %load/v 40, v0x1de44b0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %jmp/0xz T_0.23, 5;
    %load/v 8, v0x1de4640_0, 32;
    %load/v 40, v0x1de44b0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x1de4640_0, 8, 32;
    %load/v 8, v0x1de4410_0, 32;
    %mov 40, 0, 1;
    %addi 8, 1, 33;
    %set/v v0x1de4410_0, 8, 32;
    %jmp T_0.22;
T_0.23 ;
    %load/v 8, v0x1de48f0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.24, 4;
    %load/x1p 11, v0x1de45a0_0, 1;
    %jmp T_0.25;
T_0.24 ;
    %mov 11, 2, 1;
T_0.25 ;
    %mov 9, 11, 1; Move signal select into place
    %mov 10, 0, 1;
    %cmpi/u 9, 0, 2;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.26, 4;
    %load/x1p 12, v0x1de44b0_0, 1;
    %jmp T_0.27;
T_0.26 ;
    %mov 12, 2, 1;
T_0.27 ;
    %mov 9, 12, 1; Move signal select into place
    %mov 10, 0, 2;
    %cmpi/u 9, 1, 3;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.28, 8;
    %load/v 8, v0x1de4410_0, 32;
    %inv 8, 32;
    %addi 8, 1, 32;
    %set/v v0x1de4410_0, 8, 32;
T_0.28 ;
    %load/v 8, v0x1de48f0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.30, 4;
    %load/x1p 12, v0x1de45a0_0, 1;
    %jmp T_0.31;
T_0.30 ;
    %mov 12, 2, 1;
T_0.31 ;
    %mov 9, 12, 1; Move signal select into place
    %mov 10, 0, 2;
    %cmpi/u 9, 1, 3;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.32, 4;
    %load/x1p 11, v0x1de44b0_0, 1;
    %jmp T_0.33;
T_0.32 ;
    %mov 11, 2, 1;
T_0.33 ;
    %mov 9, 11, 1; Move signal select into place
    %mov 10, 0, 1;
    %cmpi/u 9, 0, 2;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.34, 8;
    %load/v 8, v0x1de4410_0, 32;
    %inv 8, 32;
    %addi 8, 1, 32;
    %set/v v0x1de4410_0, 8, 32;
T_0.34 ;
    %load/v 8, v0x1de4410_0, 32;
    %set/v v0x1de4740_0, 8, 32;
    %load/v 8, v0x1de4640_0, 32;
    %set/v v0x1de47e0_0, 8, 32;
    %vpi_call 2 79 "$display", "\012quotient:", v0x1de4740_0;
    %vpi_call 2 80 "$display", "\012residue:", v0x1de47e0_0;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x1d92690;
T_1 ;
    %movi 8, 2, 32;
    %set/v v0x1de4990_0, 8, 32;
    %movi 8, 1, 32;
    %set/v v0x1de4a30_0, 8, 32;
    %set/v v0x1de4f00_0, 0, 1;
    %end;
    .thread T_1;
    .scope S_0x1d92690;
T_2 ;
    %vpi_call 2 120 "$display", "\012 divission test:\012";
    %vpi_call 2 121 "$display", "\011\011\011A \011\011\011B \011\011\011\011 quotient \011\011\011\011residue \011\011\011\011sign \011";
    %vpi_call 2 122 "$monitor", "%b\011 %b\011 %b\011 %b\011%b", v0x1de4990_0, v0x1de4a30_0, v0x1de4da0_0, v0x1de4e50_0, v0x1de4f00_0;
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "PF1_Casanova_Sepulveda_Alejandra_div.v";
